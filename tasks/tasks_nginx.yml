#
# Credits: https://raw.githubusercontent.com/StarterSquad/prudentia/develop/prudentia/tasks/nginx.yml
# based on, but refactored and improved.
#

---
  - name: Nginx | Check if is present
    ansible.builtin.command: test -x /usr/sbin/nginx
    ignore_errors: yes
    register: nginx_present
    changed_when: false
    tags: nginx

  - name: Nginx | Install (Alpine Linux)
    when: ansible_os_family == "Alpine"
    block:

    - name: Nginx | Install (apk)
      community.general.apk:
        update_cache: yes
        state: present
        name: nginx
      retries: 3
      register: result
      until: result is not failed
      when: nginx_present is failed
      become: true
      tags: nginx

    - name: Nginx | Install (apk)
      community.general.apk:
        state: present
        name: acl
      retries: 3
      register: result
      until: result is not failed
      when: nginx_present is failed
      become: true
      tags: nginx

  - name: Nginx | Install (Debian-based systems)
    when: ansible_os_family == "Debian"
    block:

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes
      when: ansible_os_family == "Debian"
      become: true
      tags: nginx

    - name:  Nginx |  Get acl dependency (ansible unprivileged user operations magic)
      ansible.builtin.package:
        name: "{{ ['acl','libacl1','libacl1-dev'] if ansible_distribution == 'Debian' else 'acl' }}"
        state: "present"
      retries: 3
      register: result
      until: result is not failed
      become: true
      tags:
        - nginx

    - name: Nginx | Install GPG (required for apt key management)
      ansible.builtin.package:
        name: gnupg
        state: present
      retries: 3
      register: result
      until: result is not failed
      become: true
      tags:
        - nginx

    - name: Nginx | Add GPG key to apt keyring
      ansible.builtin.apt_key:
        url: http://nginx.org/keys/nginx_signing.key
        state: present
      retries: 3
      register: result
      until: result is not failed
      when: nginx_present is failed
      become: true
      tags:
        - nginx

    - name: Nginx | Add Debian apt repository
      ansible.builtin.apt_repository:
        repo: "deb http://nginx.org/packages/debian/ {{ ansible_distribution_release }} nginx"
      when: ansible_os_family == "Debian" and ansible_distribution != "Ubuntu" and nginx_present is failed
      become: true
      tags: nginx

    - name: Nginx | Add Ubuntu apt repository
      ansible.builtin.apt_repository:
        repo: "deb http://nginx.org/packages/ubuntu/ {{ ansible_distribution_release }} nginx"
      when: ansible_distribution == "Ubuntu" and nginx_present is failed
      become: true
      tags: nginx

    - name: Nginx | Install (apt)
      ansible.builtin.apt:
        update-cache: yes
        force: yes
        state: present
        pkg: nginx
      retries: 3
      register: result
      until: result is not failed
      when: nginx_present is failed
      become: true
      tags: nginx

  - name: Nginx | Install (RPM-based systems)
    when: ansible_distribution == 'RedHat' or ansible_distribution == 'CentOS' or ansible_distribution == 'Fedora'
    block:
    - name: Nginx | Get acl dependency (ansible unprivileged user operations magic)
      ansible.builtin.package:
        name: "acl"
        state: "present"
      retries: 3
      register: result
      until: result is not failed
      become: true
      tags:
        - nginx

    - name: Nginx | Add  RPM official nginx key
      ansible.builtin.rpm_key:
        key: http://nginx.org/keys/nginx_signing.key
      retries: 3
      register: result
      until: result is not failed
      when: ansible_distribution == 'RedHat' or ansible_distribution == 'CentOS'
      become: true
      tags: nginx

    - name: Nginx | add YUM official nginx repository
      ansible.builtin.template:
        src: "{{ role_dir }}/templates/nginx/nginx.repo.j2"
        dest: /etc/yum.repos.d/nginx.repo
        mode: "0644"
      when: ansible_distribution == 'RedHat' or ansible_distribution == 'CentOS'
      become: true
      tags: nginx

    - name: Nginx | Install (OS specific yum/dng)
      ansible.builtin.package:
        state: present
        name: nginx
      retries: 3
      register: result
      until: result is not failed
      become: true
      tags: nginx

  - name: Nginx | Create sites available/enabled directories
    ansible.builtin.file:
      path: "{{ item }}"
      state: directory
      mode: "0755"
    with_items:
      - /etc/nginx/sites-available
      - /etc/nginx/sites-enabled
    become: true
    tags:
      - nginx


  - name: Nginx | Configure include sites-enabled
    ansible.builtin.lineinfile:
      dest: /etc/nginx/nginx.conf
      regexp: ".*sites-enabled.*"
      line: "    include /etc/nginx/sites-enabled/*;"
      insertbefore: "}"
      state: present
    become: true
    tags:
      - nginx

  - name: Nginx | Disable default site
    ansible.builtin.file:
      path: "{{ item }}"
      state: absent
    with_items:
      - /etc/nginx/default.conf
      - /etc/nginx/conf.d/default.conf
    when:  nginx_present is failed
    become: true
    tags:
      - nginx


  - name: Nginx | Uncomment server_names_hash_bucket_size
    ansible.builtin.lineinfile:
      dest: /etc/nginx/nginx.conf
      regexp: "^(\\s*)#\\s*server_names_hash_bucket_size"
      line: "\\1server_names_hash_bucket_size 64;"
      backrefs: yes
    become: true
    tags:
      - nginx

  - name: Nginx | Patch basic settings /etc/nginx/nginx.conf
    ansible.builtin.lineinfile:
      dest: /etc/nginx/nginx.conf
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      insertbefore: "{{ item.insertbefore | default(omit) }}"
      insertafter: "{{ item.insertafter | default(omit) }}"
      backrefs: "{{ item.backrefs | default(omit) }}"
    with_items: "{{ nginx_conf_properties | default([]) }}"
    become: true
    tags:
      - nginx

  - name: Nginx | Create snippets directory
    ansible.builtin.file:
      path: "{{ item }}"
      state: directory
      mode: "0755"
    with_items:
      - /etc/nginx/snippets
    become: true
    tags:
      - nginx

  - name: Nginx | Put default snippets there
    ansible.builtin.copy:
      src: "{{ role_dir }}/files/snippets/{{ item }}"
      dest: "/etc/nginx/snippets/{{ item }}"
      owner: root
      group: root
      mode: u=rw,g=r,o=r
    with_items:
      - fastcgi.conf
      - fastcgi_params
      - uwsgi_params
    become: true
    tags:
      - nginx

  - name: Nginx | Add nginx user to additional groups, if needed
    ansible.builtin.user:
      name: 'nginx'
      groups: "{{ item }}"
      append: yes
    with_items: "{{ nginx_groups | default([]) }}"
    become: true
    tags:
      - nginx

  - name: Nginx | custom log files workaround - allow nginx user to write files into /var/log/nginx but not read
    ansible.posix.acl:
      path: /var/log/nginx
      entity: nginx
      etype: user
      permissions: wx
      state: present
    become: true
    tags:
      - nginx

  - name: Nginx | Reload configuration
    ansible.builtin.service:
      name: nginx
      state: restarted
      enabled: yes
    when: nginx_present is failed and docker_test is not defined
    become: true
    tags:
      - nginx
